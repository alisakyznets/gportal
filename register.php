<?php
require_once __DIR__ . '/includes/config.php';
require_once __DIR__ . '/includes/functions.php';

if (isLoggedIn()) {
    redirect('profile.php');
}

$errors = [];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    $fio = trim($_POST['fio']);
    $login = trim($_POST['login']);
    $email = trim($_POST['email']);
    $password = $_POST['password'];
    $password_confirm = $_POST['password_confirm'];

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –§–ò–û
    if (!preg_match('/^[–∞-—è—ë–ê-–Ø–Å\s-]+$/u', $fio)) {
        $errors['fio'] = "–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ—Ñ–∏—Å—ã";
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞
    if (!preg_match('/^[a-zA-Z0-9]+$/', $login)) {
        $errors['login'] = "–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã";
    } else {
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM users WHERE login = ?");
        $stmt->execute([$login]);
        if ($stmt->fetchColumn() > 0) {
            $errors['login'] = "–≠—Ç–æ—Ç –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–Ω—è—Ç";
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors['email'] = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email";
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    if (strlen($password) < 6) {
        $errors['password'] = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤";
    } elseif ($password !== $password_confirm) {
        $errors['password_confirm'] = "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç";
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª—è
    if (empty($errors)) {
        $stmt = $pdo->prepare("INSERT INTO users (fio, login, email, password, role) VALUES (?, ?, ?, ?, 'user')");
        $stmt->execute([$fio, $login, $email, $password]); // –ü–∞—Ä–æ–ª—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–æ

        redirect('login.php', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.');
    }
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</title>
    <link rel="stylesheet" href="assets/css/style.css">
    <style>
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="register-container">
        <h1>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</h1>
        
        <?php displayMessage(); ?>
        
        <form method="POST" novalidate>
            <div class="form-group with-icon user-icon">
                <label>–§–ò–û:</label>
                <input type="text" name="fio" value="<?= isset($fio) ? escape($fio) : '' ?>" required placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á">
                <?= isset($errors['fio']) ? '<span class="error-message">' . escape($errors['fio']) . '</span>' : '' ?>
            </div>
            
            <div class="form-group with-icon user-icon">
                <label>–õ–æ–≥–∏–Ω:</label>
                <input type="text" name="login" value="<?= isset($login) ? escape($login) : '' ?>" required placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω">
                <?= isset($errors['login']) ? '<span class="error-message">' . escape($errors['login']) . '</span>' : '' ?>
            </div>
            
            <div class="form-group with-icon email-icon">
                <label>Email:</label>
                <input type="email" name="email" value="<?= isset($email) ? escape($email) : '' ?>" required placeholder="example@mail.ru">
                <?= isset($errors['email']) ? '<span class="error-message">' . escape($errors['email']) . '</span>' : '' ?>
            </div>
            
            <div class="form-group with-icon password-icon">
                <label>–ü–∞—Ä–æ–ª—å:</label>
                <div class="password-wrapper">
                    <input type="password" name="password" required placeholder="–ù–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤" id="reg-password">
                    <span class="password-toggle" id="reg-password-toggle">üëÅÔ∏è</span>
                </div>
                <?= isset($errors['password']) ? '<span class="error-message">' . escape($errors['password']) . '</span>' : '' ?>
            </div>
            
            <div class="form-group with-icon password-icon">
                <label>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
                <div class="password-wrapper">
                    <input type="password" name="password_confirm" required placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å" id="reg-confirm">
                    <span class="password-toggle" id="reg-confirm-toggle">üëÅÔ∏è</span>
                </div>
                <?= isset($errors['password_confirm']) ? '<span class="error-message">' . escape($errors['password_confirm']) . '</span>' : '' ?>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" required checked>
                    –Ø —Å–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                </label>
            </div>
            
            <button type="submit" class="btn">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
            
            <div class="form-footer">
                <p>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <a href="login.php">–í–æ–π–¥–∏—Ç–µ</a></p>
            </div>
        </form>
    </div>

    <script>
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π
        document.getElementById('reg-password-toggle').addEventListener('click', function() {
            const passwordField = document.getElementById('reg-password');
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è';
        });

        document.getElementById('reg-confirm-toggle').addEventListener('click', function() {
            const passwordField = document.getElementById('reg-confirm');
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è';
        });

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        const password = document.getElementById('reg-password');
        const confirm = document.getElementById('reg-confirm');

        function validatePasswords() {
            if (password.value !== confirm.value) {
                confirm.setCustomValidity("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç");
            } else {
                confirm.setCustomValidity("");
            }
        }

        password.addEventListener('input', validatePasswords);
        confirm.addEventListener('input', validatePasswords);
    </script>
</body>
</html>